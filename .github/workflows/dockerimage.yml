name: build

on: [push, pull_request]

jobs:

  build_app_image:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: build base.app image
      env:
        GITHUB_PACKAGE_TOKEN: ${{ secrets.GITHUBPKG }}
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        USERNAME: ${{ github.actor }}
        GITHUB_SHA: ${{ github.sha}}
        GITHUB_REF: ${{ github.ref}}
      run: |
        if: ${{ github.ref == 'refs/heads/master' }}
        ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
        echo GITHUB_REF - $ref
        echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
        echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
        docker buildx build --push --platform linux/amd64,linux/arm/v7,linux/arm64 \
          -t ghcr.io/${USERNAME}/baseimage/app:${ref} -t ${USERNAME}/baseimage:app-${ref} \
          base.alpine -f base.alpine/Dockerfile

    - name: build base.app latest image
      env:
        GITHUB_PACKAGE_TOKEN: ${{ secrets.GITHUBPKG }}
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        USERNAME: ${{ github.actor }}
        GITHUB_SHA: ${{ github.sha}}
        GITHUB_REF: ${{ github.ref}}
      run: |
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
        echo GITHUB_REF - $ref
        echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
        echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
        docker buildx build --push --platform linux/amd64,linux/arm/v7,linux/arm64 \
          -t ghcr.io/${USERNAME}/baseimage/app:${ref} -t ${USERNAME}/baseimage:app-${ref} \
          -t ghcr.io/${USERNAME}/baseimage/app:lastes -t ${USERNAME}/baseimage:app-latest \
          base.alpine -f base.alpine/Dockerfile


  build_go_image:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: build build.go image
      env:
        GITHUB_PACKAGE_TOKEN: ${{ secrets.GITHUBPKG }}
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        USERNAME: ${{ github.actor }}
        GITHUB_SHA: ${{ github.sha}}
        GITHUB_REF: ${{ github.ref}}
      run: |
        if: ${{ github.ref == 'refs/heads/master' }}
        ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
        echo GITHUB_REF - $ref
        echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
        echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
        docker buildx build --push --platform linux/amd64,linux/arm/v7,linux/arm64 \
          -t ghcr.io/${USERNAME}/baseimage/buildgo:${ref} -t ${USERNAME}/baseimage:app-${ref} \
          build.go -f build.go/Dockerfile

    - name: build build.go latest image
      env:
        GITHUB_PACKAGE_TOKEN: ${{ secrets.GITHUBPKG }}
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        USERNAME: ${{ github.actor }}
        GITHUB_SHA: ${{ github.sha}}
        GITHUB_REF: ${{ github.ref}}
      run: |
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
        echo GITHUB_REF - $ref
        echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
        echo ${DOCKER_HUB_TOKEN} | docker login -u ${USERNAME} --password-stdin
        docker buildx build --push --platform linux/amd64,linux/arm/v7,linux/arm64 \
          -t ghcr.io/${USERNAME}/baseimage/buildgo:${ref} -t ${USERNAME}/baseimage:app-${ref} \
          -t ghcr.io/${USERNAME}/baseimage/buildgo:latest -t ${USERNAME}/baseimage:app-latest \
          build.go -f build.go/Dockerfile
